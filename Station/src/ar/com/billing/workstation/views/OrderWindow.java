/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.billing.workstation.views;

import ar.com.billing.workstation.controllers.PrepararPedidoController;
import ar.com.billing.workstation.dao.OrderDao;
import ar.com.billing.workstation.devices.BarcodeReaderManager;
import ar.com.billing.workstation.model.Order;
import ar.com.billing.workstation.views.table.models.PrepararPedidoTableDataModel;
import ar.com.billing.workstation.views.table.renderers.FilterRendererCompleteItem;

import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Mildo
 */
public class OrderWindow extends javax.swing.JFrame {

    private static OrderWindow instance = null;
    private Order order;
    private TableColumnModel tableColumnModel;
    private PrepararPedidoController prepararPedidoController=null;
    private BarcodeReaderManager barcodeManager;
    public static OrderWindow getInstance(){
        if(instance==null){
            instance = new OrderWindow();
        }
        
        return instance;
    
    }
    
   
    /**
     * Creates new form OrderWindow
     */
    private OrderWindow() {
        initComponents();
        barcodeManager = new BarcodeReaderManager();
        validationMsgLabel.setText("Pase el lector por el código de barras o presione 'Ingresar'");
        prepararPedidoController = new PrepararPedidoController();
        
        
    }
    
    public  void successMsg(String msg) {
        validationMsgLabel.setText(msg);
        validationMsgLabel.setForeground(java.awt.Color.BLUE);
    }

    public  void errorMsg(String msg) {
        validationMsgLabel.setText(msg);
        validationMsgLabel.setForeground(java.awt.Color.RED);
    }
    
    public void refresh(){
        if(order!=null){
            Order aOrder = OrderDao.findOrderById(order.getId());
            ((PrepararPedidoTableDataModel)prepararPedidoTable.getModel()).setOrder(aOrder);
            prepararPedidoTable.updateUI();
        }
        
        
             
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tituloLbl = new javax.swing.JLabel();
        pedidoPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        prepararPedidoTable = new javax.swing.JTable();
        validationMsgLabel = new javax.swing.JLabel();
        completoBtn = new javax.swing.JButton();
        ingresarBtn = new javax.swing.JButton();
        quitarBtn = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        embalajeMenu = new javax.swing.JMenu();
        jmiEmbalar = new javax.swing.JMenuItem();
        pedidosMenu = new javax.swing.JMenu();
        jmiPendientes = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Preparar pedido");
        setPreferredSize(new java.awt.Dimension(750, 550));
        setResizable(false);

        tituloLbl.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        tituloLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tituloLbl.setText("Pedido nº10");
        tituloLbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        pedidoPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pedidoPanel.setName("pedidoPanel"); // NOI18N
        pedidoPanel.setPreferredSize(new java.awt.Dimension(710, 355));

        prepararPedidoTable.setModel(new PrepararPedidoTableDataModel(null));
        prepararPedidoTable.setGridColor(new java.awt.Color(204, 204, 204));
        jScrollPane1.setViewportView(prepararPedidoTable);

        org.jdesktop.layout.GroupLayout pedidoPanelLayout = new org.jdesktop.layout.GroupLayout(pedidoPanel);
        pedidoPanel.setLayout(pedidoPanelLayout);
        pedidoPanelLayout.setHorizontalGroup(
            pedidoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pedidoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1)
                .addContainerGap())
        );
        pedidoPanelLayout.setVerticalGroup(
            pedidoPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pedidoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                .addContainerGap())
        );

        validationMsgLabel.setForeground(new java.awt.Color(204, 0, 0));

        completoBtn.setText("Completo");
        completoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completoBtnActionPerformed(evt);
            }
        });

        ingresarBtn.setText("Ingresar");
        ingresarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarBtnActionPerformed(evt);
            }
        });

        quitarBtn.setText("Quitar");
        quitarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitarBtnActionPerformed(evt);
            }
        });

        jMenu1.setText("Archivo");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        menuBar.add(jMenu1);

        embalajeMenu.setText("Productos");

        jmiEmbalar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_MASK));
        jmiEmbalar.setText("Embalar");
        jmiEmbalar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiEmbalarembalarActionPerfomed(evt);
            }
        });
        embalajeMenu.add(jmiEmbalar);

        menuBar.add(embalajeMenu);

        pedidosMenu.setText("Pedidos");

        jmiPendientes.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.SHIFT_MASK));
        jmiPendientes.setText("Pendientes");
        jmiPendientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiPendientespedidosMenuActionPerformed(evt);
            }
        });
        pedidosMenu.add(jmiPendientes);

        menuBar.add(pedidosMenu);

        setJMenuBar(menuBar);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(tituloLbl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(17, 17, 17)
                        .add(validationMsgLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 370, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(quitarBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 77, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(ingresarBtn)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(completoBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 6, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, pedidoPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(tituloLbl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pedidoPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(validationMsgLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .add(completoBtn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .add(quitarBtn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(ingresarBtn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmiEmbalarembalarActionPerfomed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiEmbalarembalarActionPerfomed
        order=null;
        MainWindow.getInstance().clearAllElements();
        MainWindow.getInstance().embalarClick(evt);
        this.setVisible(false);
        MainWindow.getInstance().setVisible(true);
        
        
    }//GEN-LAST:event_jmiEmbalarembalarActionPerfomed

    private void jmiPendientespedidosMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiPendientespedidosMenuActionPerformed
        order=null;
        MainWindow.getInstance().clearAllElements();
        MainWindow.getInstance().listPedidoClick(evt);
        MainWindow.getInstance().refresh();
        this.setVisible(false);
        MainWindow.getInstance().setVisible(true);
    }//GEN-LAST:event_jmiPendientespedidosMenuActionPerformed

    private void completoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completoBtnActionPerformed
       boolean result= prepararPedidoController.completeOrder(order);
       order=null;
       if(result){
           successMsg("La operación se realizó con éxito.");
           jmiPendientespedidosMenuActionPerformed(evt);
       }else{
           errorMsg("No se pudo completar la operación por un error de comunicación.");
       } 
        
    }//GEN-LAST:event_completoBtnActionPerformed

    private void ingresarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresarBtnActionPerformed
        String read = null;
      
        read = JOptionPane.showInputDialog((JComponent) OrderWindow.getInstance().getPedidoPanel(), (Object) "Pase el código por el lector o ingreselo:", "Ingrese el producto", JOptionPane.QUESTION_MESSAGE);
        prepararPedidoController.processBarcode(read, order);
        
    }//GEN-LAST:event_ingresarBtnActionPerformed
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void quitarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitarBtnActionPerformed
         String read = null;
      
        read = JOptionPane.showInputDialog((JComponent) OrderWindow.getInstance().getPedidoPanel(), (Object) "Pase el código por el lector o ingreselo:", "Quitar el producto", JOptionPane.QUESTION_MESSAGE);
        prepararPedidoController.removeBarcode(read, order);
    }//GEN-LAST:event_quitarBtnActionPerformed
    public void showAlertMessage(String msg){
        JOptionPane.showMessageDialog((JComponent) OrderWindow.getInstance().getPedidoPanel(), (Object) msg, "Cuidado!!", JOptionPane.ERROR_MESSAGE);
    }
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton completoBtn;
    private javax.swing.JMenu embalajeMenu;
    private javax.swing.JButton ingresarBtn;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem jmiEmbalar;
    private javax.swing.JMenuItem jmiPendientes;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel pedidoPanel;
    private javax.swing.JMenu pedidosMenu;
    private javax.swing.JTable prepararPedidoTable;
    private javax.swing.JButton quitarBtn;
    private javax.swing.JLabel tituloLbl;
    private javax.swing.JLabel validationMsgLabel;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the order
     */
    public Order getOrder() {
        return order;
    }

    
    /**
     * @param order the order to set
     */
    public void setOrder(Order aOrder) {
        
        if(aOrder!=null){
            this.order = aOrder;
            String aux = aOrder.getClientName().length()>28 ? aOrder.getClientName().substring(0, 28) : aOrder.getClientName();
            tituloLbl.setText("Pedido de " + aux);  
            ((PrepararPedidoTableDataModel) prepararPedidoTable.getModel()).setOrder(aOrder);
            tableColumnModel = prepararPedidoTable.getColumnModel();
            tableColumnModel.getColumn(0).setPreferredWidth(20);
            tableColumnModel.getColumn(1).setPreferredWidth(180);
            tableColumnModel.getColumn(2).setPreferredWidth(50);
            validationMsgLabel.setText("");
            tableColumnModel.getColumn(0).setCellRenderer(new FilterRendererCompleteItem());
            tableColumnModel.getColumn(1).setCellRenderer(new FilterRendererCompleteItem());
            tableColumnModel.getColumn(2).setCellRenderer(new FilterRendererCompleteItem());

            
        }else{
            errorMsg("Pedido invalido");
        }
    }
    
    /**
     * @return the pedidoPanel
     */
    public javax.swing.JPanel getPedidoPanel() {
        return pedidoPanel;
    }

}
